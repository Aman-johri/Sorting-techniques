class QuickSort{
       public static void main(String[] args){
           int[] c={15,9,4,7,12,16,3,18,11};
           QuickSort obj = new QuickSort();
           obj.QuickSortRecursion(c,0,c.length-1);
           obj.printarray(c);
       }

       public int partition(int[] c,int low,int high){
           int pivot = c[(low + high)/2];
           while (low <= high){
               while (c[low] < pivot){
                   low++;
               }
               while (c[high] > pivot){
                   high--;
               }
               if (low <= high)
               {
                   int temp = c[low];
                   c[low] = c[high];
                   c[high] = temp;

                   low++;
                   high--;
               }
           }
           return low;
       }

       public void QuickSortRecursion(int[] c , int low , int high){
           int pi =partition(c,low,high);
           if (low < pi-1){
               QuickSortRecursion(c,low,pi-1);
           }
           if (pi < high){
               QuickSortRecursion(c,pi,high);
           }
       }
       public void printarray(int[] c){
           for (int i = 0; i < c.length-1; i++) {
               System.out.println(+c[i]);
           }
       }
}

